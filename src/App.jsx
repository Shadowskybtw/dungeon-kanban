import React, { useState, useEffect, useCallback } from 'react';
import Header from './components/Header';
import ZoneCard from './components/ZoneCard';
import EditModal from './components/EditModal';
import { fetchBookings, updateBookingStatus, deleteBooking, updateBooking } from './services/googleSheets';

/**
 * –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ö–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∞
 */
function App() {
  const [zones, setZones] = useState([]);
  const [selectedBranch, setSelectedBranch] = useState('–ú–æ—Å–∫–æ–≤—Å–∫–æ–µ —à.');
  const [statusFilter, setStatusFilter] = useState('all');
  const [lastUpdate, setLastUpdate] = useState(new Date());
  const [isLoading, setIsLoading] = useState(false);
  const [editModalOpen, setEditModalOpen] = useState(false);
  const [editingBooking, setEditingBooking] = useState(null);
  const [editingZone, setEditingZone] = useState(null);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Google Sheets
  const loadData = useCallback(async () => {
    setIsLoading(true);
    try {
      const data = await fetchBookings(selectedBranch);
      setZones(data);
      setLastUpdate(new Date());
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
    } finally {
      setIsLoading(false);
    }
  }, [selectedBranch]);

  // –ù–∞—á–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∏ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
  useEffect(() => {
    loadData();
    const interval = setInterval(loadData, 30000);
    return () => clearInterval(interval);
  }, [loadData]);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–º–µ–Ω—ã —Ñ–∏–ª–∏–∞–ª–∞
  const handleBranchChange = (branch) => {
    setSelectedBranch(branch);
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  const handleStatusChange = async (bookingId, newStatus) => {
    try {
      await updateBookingStatus(bookingId, newStatus);
      await loadData();
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞:', error);
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è');
    }
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  const handleEdit = (booking) => {
    // –ù–∞—Ö–æ–¥–∏–º –∑–æ–Ω—É –¥–ª—è —ç—Ç–æ–≥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    const zone = zones.find(z => z.booking?.id === booking.id);
    setEditingBooking(booking);
    setEditingZone(zone);
    setEditModalOpen(true);
  };

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  const handleSaveEdit = async (bookingId, newData) => {
    try {
      await updateBooking(bookingId, newData);
      await loadData();
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ');
    }
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  const handleDelete = async (bookingId) => {
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ?')) {
      try {
        await deleteBooking(bookingId);
        await loadData();
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:', error);
        alert('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ');
      }
    }
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –≤—Å–µ—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
  const handleClearAll = () => {
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è?')) {
      // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –≤—ã–∑–æ–≤ API –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
      console.log('–û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π');
      loadData();
    }
  };

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∑–æ–Ω –ø–æ —Å—Ç–∞—Ç—É—Å—É
  const filteredZones = zones.filter(zone => {
    if (statusFilter === 'all') return true;
    if (!zone.booking) return false;
    
    switch (statusFilter) {
      case 'active':
        return zone.booking.status === 'active';
      case 'pending':
        return zone.booking.status === 'pending';
      default:
        return true;
    }
  });

  return (
    <div className="min-h-screen bg-gradient-to-br from-dungeon-dark via-dungeon-darker to-dungeon-dark">
      {/* –§–æ–Ω–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã */}
      <div className="fixed inset-0 overflow-hidden pointer-events-none">
        <div className="absolute top-0 left-1/4 w-96 h-96 bg-dungeon-neon-green/5 rounded-full blur-3xl animate-pulse"></div>
        <div className="absolute bottom-0 right-1/4 w-96 h-96 bg-dungeon-neon-purple/5 rounded-full blur-3xl animate-pulse" style={{ animationDelay: '1s' }}></div>
        <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-dungeon-neon-blue/5 rounded-full blur-3xl animate-pulse" style={{ animationDelay: '2s' }}></div>
      </div>

      {/* –ö–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="relative z-10">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <Header
          selectedBranch={selectedBranch}
          onBranchChange={handleBranchChange}
          statusFilter={statusFilter}
          onStatusFilterChange={setStatusFilter}
          onRefresh={loadData}
          onClearAll={handleClearAll}
          lastUpdate={lastUpdate}
          totalZones={zones.length}
        />

        {/* –û—Å–Ω–æ–≤–Ω–∞—è —Å–µ—Ç–∫–∞ –∑–æ–Ω */}
        <main className="container mx-auto px-4 py-8">
          {isLoading && zones.length === 0 ? (
            <div className="flex items-center justify-center h-64">
              <div className="text-center">
                <div className="inline-block animate-spin rounded-full h-12 w-12 border-4 border-dungeon-neon-green border-t-transparent mb-4"></div>
                <p className="text-gray-400">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</p>
              </div>
            </div>
          ) : filteredZones.length === 0 ? (
            <div className="flex items-center justify-center h-64">
              <div className="text-center">
                <div className="text-6xl mb-4">üîç</div>
                <p className="text-gray-400 text-lg">–ù–µ—Ç –∑–æ–Ω, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∏–ª—å—Ç—Ä—É</p>
              </div>
            </div>
          ) : (
            <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 2xl:grid-cols-5 gap-6">
              {filteredZones.map(zone => (
                <ZoneCard
                  key={zone.id}
                  zone={zone}
                  onStatusChange={handleStatusChange}
                  onEdit={handleEdit}
                  onDelete={handleDelete}
                />
              ))}
            </div>
          )}

          {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
          <div className="mt-12 grid grid-cols-1 md:grid-cols-3 gap-6">
            <div className="bg-dungeon-card/50 backdrop-blur-sm rounded-xl p-6 border-2 border-dungeon-neon-green/30">
              <div className="flex items-center gap-4">
                <div className="w-12 h-12 rounded-full bg-dungeon-neon-green/20 flex items-center justify-center">
                  <span className="text-2xl">‚úÖ</span>
                </div>
                <div>
                  <p className="text-gray-400 text-sm">–ê–∫—Ç–∏–≤–Ω—ã–µ –±—Ä–æ–Ω–∏</p>
                  <p className="text-2xl font-bold text-dungeon-neon-green">
                    {zones.filter(z => z.booking?.status === 'active').length}
                  </p>
                </div>
              </div>
            </div>

            <div className="bg-dungeon-card/50 backdrop-blur-sm rounded-xl p-6 border-2 border-yellow-500/30">
              <div className="flex items-center gap-4">
                <div className="w-12 h-12 rounded-full bg-yellow-500/20 flex items-center justify-center">
                  <span className="text-2xl">‚è≥</span>
                </div>
                <div>
                  <p className="text-gray-400 text-sm">–û–∂–∏–¥–∞—é—â–∏–µ</p>
                  <p className="text-2xl font-bold text-yellow-500">
                    {zones.filter(z => z.booking?.status === 'pending').length}
                  </p>
                </div>
              </div>
            </div>

            <div className="bg-dungeon-card/50 backdrop-blur-sm rounded-xl p-6 border-2 border-gray-500/30">
              <div className="flex items-center gap-4">
                <div className="w-12 h-12 rounded-full bg-gray-500/20 flex items-center justify-center">
                  <span className="text-2xl">üì≠</span>
                </div>
                <div>
                  <p className="text-gray-400 text-sm">–°–≤–æ–±–æ–¥–Ω—ã–µ –∑–æ–Ω—ã</p>
                  <p className="text-2xl font-bold text-gray-300">
                    {zones.filter(z => !z.booking).length}
                  </p>
                </div>
              </div>
            </div>
          </div>
        </main>

        {/* –§—É—Ç–µ—Ä */}
        <footer className="container mx-auto px-4 py-8 text-center text-gray-500 text-sm">
          <p>¬© 2025 DUNGEON. –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è–º–∏.</p>
          <p className="mt-2">–ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥</p>
        </footer>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */}
      <EditModal
        booking={editingBooking}
        zone={editingZone}
        isOpen={editModalOpen}
        onClose={() => setEditModalOpen(false)}
        onSave={handleSaveEdit}
      />
    </div>
  );
}

export default App;

